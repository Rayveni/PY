from aiogram import Dispatcher
from aiogram.types import CallbackQuery
from aiogram.filters import StateFilter,Text
from aiogram.fsm.context import FSMContext
from .keyboards  import pagination_kb
from .filters import *
from .states import *

def setup_callback_handler(dispatcher:Dispatcher)->None:
    dispatcher.callback_query.register(process_callback_button1,lambda c: c.data == 'button1')  
    dispatcher.callback_query.register(process_pagination,lambda c: c.data in  ('forward','backward'))  
    dispatcher.callback_query.register(goods,GoodsCallbackFactory.filter())  
    dispatcher.callback_query.register(process_callback_kb1btn1)    
    
    dispatcher.callback_query.register(process_gender_press,StateFilter(FSMFillForm.fill_gender),Text(text=['male', 'female', 'undefined_gender']))  
async def process_callback_kb1btn1(callback_query: CallbackQuery):
    code = callback_query.data[-1]
    if code.isdigit():
        code = int(code)
    if code == 2:
        await callback_query.message.answer( text='–ù–∞–∂–∞—Ç–∞ –≤—Ç–æ—Ä–∞—è –∫–Ω–æ–ø–∫–∞')
    elif code == 5:
        await callback_query.answer(
            text='–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ —Å –Ω–æ–º–µ—Ä–æ–º 5.\n–ê —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–ª–∏–Ω–æ–π –¥–æ 200 —Å–∏–º–≤–æ–ª–æ–≤ üòâ',
            show_alert=True)
    else:
        print(callback_query.json(indent=4, exclude_none=True))
        await callback_query.message.answer(str(callback_query.json(indent=4, exclude_none=True)))
    #await bot.send_message(callback_query.from_user.id, f'–ù–∞–∂–∞—Ç–∞ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∞! code={code}')
    await callback_query.message.answer(callback_query)
    
    
async def process_callback_button1(callback_query: CallbackQuery):
    await callback_query.message.answer("–ò—Ç–æ–≥–æ:1")
    await callback_query.answer(text= "–ù–∞–∂–∞—Ç–∞ –ø–µ—Ä–≤–∞—è –∫–Ω–æ–ø–∫–∞!")

page=10    
async def process_pagination(callback_query: CallbackQuery):
    global page
    if callback_query.data=='forward':
        page=page+1
    else:
        page=page-1
    _keyboard=pagination_kb('backward',f'{page}/400','forward')
    await callback_query.message.edit_text(text='dddw',reply_markup=_keyboard)


async def goods(callback_query: CallbackQuery):
    await callback_query.message.edit_text(text='test filter goods')

# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏
# –≤—ã–±–æ—Ä–µ –ø–æ–ª–∞ –∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ

async def process_gender_press(callback: CallbackQuery, state: FSMContext):
    # C–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª (callback.data –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–∏) –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ,
    # –ø–æ –∫–ª—é—á—É "gender"
    await state.update_data(gender=callback.data)
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏, –ø–æ—Ç–æ–º—É —á—Ç–æ —Å–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø - –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ
    # —á—Ç–æ–±—ã —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –±—ã–ª–æ –∂–µ–ª–∞–Ω–∏—è —Ç—ã–∫–∞—Ç—å –∫–Ω–æ–ø–∫–∏
    await callback.message.delete()
    await callback.message.answer(text='–°–ø–∞—Å–∏–±–æ! –ê —Ç–µ–ø–µ—Ä—å –∑–∞–≥—Ä—É–∑–∏—Ç–µ, '
                                       '–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à–µ —Ñ–æ—Ç–æ')
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ
    await state.set_state(FSMFillForm.upload_photo)